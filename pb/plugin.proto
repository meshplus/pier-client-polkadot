syntax = "proto3";
package pb;

import "ibtp.proto";

message Empty {}

message InitializeRequest {
  string config_path = 1;
  string pier_id = 2;
  bytes extra = 3;
}

message SubmitIBTPResponse {
  bool status = 1;
  string message = 2;
  pb.IBTP result = 3;
}

message RollbackIBTPRequest {
  pb.IBTP ibtp = 1;
  bool srcChain = 2;
}

message QueryFilterLockStartRequest {
  uint64 appchainIndex = 1;
}

message QueryFilterLockStartResponse {
  uint64 lockStart = 1;
}

message RollbackIBTPResponse {
  bool status = 1;
  string message = 2;
}

message GetOutMessageRequest {
  string to = 1;
  uint64 idx = 2;
}

message GetInMessageRequest {
  string from = 1;
  uint64 idx = 2;
}

message GetInMessageResponse {
  repeated bytes result = 1;
}

message GetMetaResponse {
  map<string, uint64> meta = 1;
}

message NameResponse {
  string name = 1;
}

message TypeResponse {
  string types = 1;
}

message LockEvent {
  bytes receipt = 1;
  bytes proof = 2;
  uint64 appchainIndex = 3;
  uint64 blockNumber = 4;
}

message UpdateMeta {
  bytes meta = 1;
  uint64 endHeader = 2;
}

message UnLock {
  string token = 1;
  string from = 2;
  string receipt = 3;
  bytes  amount =4;
  string txId = 5;
  uint64 relayIndex =6;
  repeated bytes multiSigns = 7;
}

message QueryRelayIndexResponse {
  uint64 relayIndex = 1;
}
message QueryAppchainIndexResponse {
  uint64 appchainIndex = 1;
}
message QueryLockEventByIndexRequest {
  uint64 index = 1;
}

service AppchainPlugin {
  rpc Initialize(InitializeRequest) returns (Empty);
  rpc Start(Empty) returns (Empty);
  rpc Stop(Empty) returns (Empty);
  rpc GetIBTP(Empty) returns (stream pb.IBTP);
  rpc SubmitIBTP(pb.IBTP) returns (SubmitIBTPResponse);
  rpc RollbackIBTP(RollbackIBTPRequest) returns (RollbackIBTPResponse);
  rpc IncreaseInMeta(pb.IBTP) returns (pb.IBTP);
  rpc GetOutMessage(GetOutMessageRequest) returns (pb.IBTP);
  rpc GetInMessage(GetInMessageRequest) returns (GetInMessageResponse);
  rpc GetInMeta(Empty) returns (GetMetaResponse);
  rpc GetOutMeta(Empty) returns (GetMetaResponse);
  rpc GetCallbackMeta(Empty) returns (GetMetaResponse);
  rpc CommitCallback(pb.IBTP) returns (Empty);
  rpc GetReceipt(pb.IBTP) returns (pb.IBTP);
  rpc GetLockEvent(Empty) returns (stream LockEvent);
  rpc GetUpdateMeta(Empty) returns (stream UpdateMeta);
  rpc UnEscrow(UnLock) returns (Empty);
  rpc Name(Empty) returns (NameResponse);
  rpc Types(Empty) returns (TypeResponse);
  rpc QueryFilterLockStart(QueryFilterLockStartRequest) returns (QueryFilterLockStartResponse);
  rpc QueryLockEventByIndex(QueryLockEventByIndexRequest) returns (pb.LockEvent);
  rpc QueryAppchainIndex(Empty) returns (QueryAppchainIndexResponse);
  rpc QueryRelayIndex(Empty) returns (QueryRelayIndexResponse);
}
